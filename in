#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2
payload="$(cat <&0)"

servicename=$(jq -r .source.servicename <<< "$payload")
skip=$(jq -r .params.skip <<< "$payload")
prev_path=$(jq -r .version.path <<< "$payload")
if [ "$(jq -r '.source | has("username")' <<< "$payload")" = 'true' ]; then
    username=$(jq -r .source.username <<< "$payload")
else
    username=''
fi
if [ "$(jq -r '.source | has("password")' <<< "$payload")" = 'true' ]; then
    password=$(jq -r .source.password <<< "$payload")
else
    password=''
fi
if [ "$(jq -r '.source | has("path")' <<< "$payload")" = 'true' ]; then
    path=$(jq -r .source.path <<< "$payload")
else
    path=''
fi
if [ "$(jq -r '.params | has("path")' <<< "$payload")" = 'true' ]; then
    path+=/$(jq -r .params.path <<< "$payload")
else
    path="$prev_path"
fi
if [ "$(jq -r '.params | has("files")' <<< "$payload")" = 'true' ]; then
    mapfile -t files_to_get < <(jq -r '.params.files|.[]' <<< "$payload" | sort)
else
    files_to_get=()
fi
args=()
if [ -z "$password" ]; then
    args+=('-N')
else
    args+=("$password")
fi
if [ -n "$username" ]; then
    args+=("-U" "$username")
fi

lines=()
files=()
while read -r line; do
    if [ -n "$line" ]; then
        if [ "${#files[@]}" -gt 2 ]; then
            echo "$line"
        fi
        lines+=("$line")
        files+=("$(echo "$line" | awk '{print $1}')")
    fi
done < <(smbclient "$servicename" "${args[@]}" -c "ls $path/*" | sort)
sha256=$(echo "${lines[@]:3}" | sha256sum | awk '{print $1}')
read -r all _ _ _ block free _ _ < <(echo "${lines[0]}")
all=$(("$all" * ${block/./} / 1024 / 1024 / 1024))
free=$(("$free" * ${block/./} / 1024 / 1024 / 1024))
size=
if [ "${#files[@]}" -gt 3 ] && [ "$skip" != "true" ]; then
    if [ "${#files_to_get[@]}" -gt 0 ]; then
        not_exist=
        for name in "${files_to_get[@]}"; do
            if ! [[ "${files[*]}" =~ $name ]]; then
                echo "\`$name' doesn't exist on $servicename/$path."
                not_exist=1
            fi
        done
        if [ -n "$not_exist" ]; then
            exit 1
        fi
        smbclient "$servicename" "${args[@]}" -D "$path" -Tc /tmp/backup.tar "${files_to_get[@]}" | head -n -2
    else
        smbclient "$servicename" "${args[@]}" -D "$path" -Tc /tmp/backup.tar "*" | head -n -2
    fi
    cd /tmp
    tar xf backup.tar
    mv "$path"/* "$1"
    size=$(du -h /tmp/backup.tar | awk '{print $1}')
fi
IFS=$'\n'
json='{"version":{"sha256":"'"$sha256"'","servicename":"'"$servicename"'","path":"'"$path"'"},"metadata":[{"name":"total","value":"'"$all"' MiB"},{"name":"free","value":"'"$free"' MiB"},{"name":"files","value":"'"${files[*]:3}"'"},{"name":"size","value":"'"$size"'"}]}'

jq -n "$json" >&3
