#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2
jq -M -S . < /dev/stdin > /tmp/input.json

servicename=$(jq -r .source.servicename < /tmp/input.json)
if [ "$(jq -r '.source | has("username")' < /tmp/input.json)" = 'true' ]; then
    username=$(jq -r .source.username < /tmp/input.json)
else
    username=''
fi
if [ "$(jq -r '.source | has("password")' < /tmp/input.json)" = 'true' ]; then
    password=$(jq -r .source.password < /tmp/input.json)
else
    password=''
fi
if [ "$(jq -r '.source | has("path")' < /tmp/input.json)" = 'true' ]; then
    path=$(jq -r .source.path < /tmp/input.json)
else
    path=''
fi
overwrite=$(jq -r .source.overwrite < /tmp/input.json) # It will be 'null' if it is not provided.
if [ "$(jq -r '.params | has("path")' < /tmp/input.json)" = 'true' ]; then
    path+=/$(jq -r .params.path < /tmp/input.json)
fi
if [ "$(jq -r '.params | has("from")' < /tmp/input.json)" = 'true' ]; then
    from=/$(jq -r .params.from < /tmp/input.json)
fi
if [ "$(jq -r '.params | has("files")' < /tmp/input.json)" = 'true' ]; then
    mapfile -t files < <(jq -r '.params.files|.[]' < /tmp/input.json | sort)
else
    files=()
fi
if [ "$(jq -r '.params | has("overwrite")' < /tmp/input.json)" = 'true' ]; then
    overwrite=$(jq -r .params.overwrite < /tmp/input.json)
fi
args=()
if [ -z "$password" ]; then
    args+=('-N')
else
    args+=("$password")
fi
if [ -n "$username" ]; then
    args+=("-U" "$username")
fi

cd "$1/$from"
if [ "${#files[@]}" = 0 ]; then
    mapfile -t files < <(find . -type f | cut -c 3- | sort)
fi
if [ "$overwrite" = "false" ]; then
    files_existed=
    for name in "${files[@]}"; do
        if smbclient "$servicename" "${args[@]}" -c "ls $path/$name" | head -n -2; then
            files_existed=1
        fi
    done
    if [ -n "$files_existed" ]; then
        echo "Some files have existed on $servicename/$path."
        exit 1
    fi
fi
tar cf /tmp/backup.tar "${files[@]}"
size=$(du -h /tmp/backup.tar | awk '{print $1}')

smbclient "$servicename" "${args[@]}" -D "$path" -Tx /tmp/backup.tar

lines=()
noop=()
while read -r line; do
    if [ -n "$line" ]; then
        if [ "${#noop[@]}" -gt 2 ]; then
            echo "$line"
        fi
        lines+=("$line")
        noop+=("$(echo "$line" | awk '{print $1}')")
    fi
done < <(smbclient "$servicename" "${args[@]}" -c "ls $path/*" | sort)

sha256=$(echo "${lines[@]:3}" | sha256sum | awk '{print $1}')

read -r all _ _ _ block free _ _ < <(echo "${lines[0]}")
all=$(("$all" * ${block/./} / 1024 / 1024 / 1024))
free=$(("$free" * ${block/./} / 1024 / 1024 / 1024))

IFS=$'\n'
json='{"version":{"sha256":"'"$sha256"'","servicename":"'"$servicename"'","path":"'"$path"'"},"metadata":[{"name":"total","value":"'"$all"' MiB"},{"name":"free","value":"'"$free"' MiB"},{"name":"files","value":"'"${files[*]}"'"}'
if [ -n "$size" ]; then
    json+=',{"name":"size","value":"'"$size"'"}]}'
else
    json+=']}'
fi

jq -n "$json" >&3
