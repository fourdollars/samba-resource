#!/bin/bash

set -euo pipefail

exec 3>&1
exec 1>&2
payload="$(cat <&0)"

servicename=$(jq -r .source.servicename <<< "$payload")
if [ "$(jq -r '.source | has("username")' <<< "$payload")" = 'true' ]; then
    username=$(jq -r .source.username <<< "$payload")
else
    username=''
fi
if [ "$(jq -r '.source | has("password")' <<< "$payload")" = 'true' ]; then
    password=$(jq -r .source.password <<< "$payload")
else
    password=''
fi
if [ "$(jq -r '.source | has("path")' <<< "$payload")" = 'true' ]; then
    path=$(jq -r .source.path <<< "$payload")
else
    path=''
fi
args=()
if [ -z "$password" ]; then
    args+=('-N')
else
    args+=("$password")
fi
if [ -n "$username" ]; then
    args+=("-U" "$username")
fi

lines=()
while read -r line; do
    if [ -n "$line" ]; then
        lines+=("$line")
    fi
done < <(smbclient "$servicename" "${args[@]}" -c "ls $path/*" | sort)

sha256=$(echo "${lines[@]:3}" | sha256sum | awk '{print $1}')

join_by()
{
    local IFS="$1"
    shift
    local list
    list=()
    for i in "$@"; do
        list+=('"'"$i"'"')
    done
    echo "${list[*]}"
}

json='[{"sha256":"'"$sha256"'","servicename":"'"$servicename"'","path":"'"$path"'"}]'

jq -n "$json" >&3
